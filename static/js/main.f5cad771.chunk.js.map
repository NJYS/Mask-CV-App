{"version":3,"sources":["Home.tsx","components/ImageResizer.tsx","components/WebcamCapture.tsx","components/useInterval.tsx","components/WebcamDrawing.tsx","Realtime.tsx","styles/ContactusTable.tsx","styles/Appbar.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["useStyles","makeStyles","theme","root","width","button","margin","spacing","input","display","main","padding","backgroundColor","height","overflow","progressCircle","createMuiTheme","typography","h3","fontSize","breakpoints","up","Home","classes","useState","previewURL","setPreview","isSetImage","setImage","result","setResult","camState","setCam","fileValue","setFile","token","headers","Buffer","from","toString","api","axios","create","baseURL","useMutation","data","post","onSuccess","res","onError","mutateCreate","isPicLoading","isLoading","useEffect","handleFileInput","e","a","preventDefault","target","file","files","ImageResizer","image","Loading","alignItems","justifyContent","className","color","Result","variant","id","camToggle","undefined","value","container","direction","justify","mt","maxWidth","item","elevation","src","mb","htmlFor","title","placement","arrow","aria-label","component","type","accept","onClick","onChange","size","json","JSON","stringify","obj","parse","Promise","resolve","Resizer","imageFileResizer","uri","videoConstraints","facingMode","WebcamCapture","props","webcamRef","useRef","capture","useCallback","imageSrc","current","getScreenshot","audio","window","innerHeight","ref","screenshotFormat","innerWidth","useInterval","callback","delay","savedCallback","setInterval","clearInterval","colorMap","red","pink","purple","deepPurple","indigo","blue","lightBlue","cyan","teal","green","lightGreen","lime","yellow","amber","orange","deepOrange","initData","initColors","WebcamDrawing","svgRef","colors","setColors","receivedMaskData","setMaskData","labels","labelData","setLabelData","bboxes","bboxData","setBboxData","segmentations","segmentation","setSegmentation","colorChange","console","log","newColors","i","push","Math","floor","random","classification","select","selectAll","join","enter","append","update","attr","exit","remove","text","detection","submit","isNaN","Number","interval","Grid","style","position","marginLeft","marginRight","textAlign","zIndex","Box","PrettoSlider","withStyles","thumb","border","marginTop","boxShadow","active","valueLabel","left","track","borderRadius","rail","Slider","dark","RealTime","classState","setClass","segState","setSeg","detState","setDet","classToggle","segToggle","detToggle","Container","Paper","Tooltip","Button","IconButton","Typography","gutterBottom","valueLabelDisplay","defaultValue","min","max","step","StyledTableCell","createStyles","head","palette","common","black","white","body","TableCell","StyledTableRow","action","hover","TableRow","createData","name","part","mail","github","rows","table","minWidth","CustomizedTables","TableContainer","Table","TableHead","align","TableBody","map","row","scope","grow","flexGrow","menuButton","inputRoot","inputInput","paddingLeft","transition","transitions","sectionDesktop","modal","paper","background","shadows","PrimarySearchAppBar","setTheme","icon","open","setOpen","contactModal","Modal","aria-labelledby","aria-describedby","onClose","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","AppBar","Toolbar","noWrap","edge","mr","App","prefersDarkMode","useMediaQuery","setValue","appliedTheme","useMemo","ThemeProvider","CssBaseline","exact","path","Realtime","BottomNavigation","newValue","showLabels","BottomNavigationAction","Link","to","label","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f5cad771.chunk.js","sourcesContent":["import React, { useState, useEffect} from 'react';\r\nimport axios from 'axios';\r\nimport { useMutation } from 'react-query';\r\nimport Image from 'material-ui-image'\r\n\r\n// components\r\nimport ImageResizer from './components/ImageResizer';\r\nimport WebcamCapture from './components/WebcamCapture';\r\n\r\n// material UI\r\nimport { Box, Button, Grid, Container, CircularProgress, Tooltip, Typography, Paper } from '@material-ui/core/';\r\nimport { makeStyles, createMuiTheme, Theme, ThemeProvider } from '@material-ui/core/styles/';\r\nimport IconButton from '@material-ui/core/IconButton/';\r\nimport PhotoCamera from '@material-ui/icons/PhotoCamera';\r\nimport AttachmentIcon from '@material-ui/icons/Attachment';\r\ninterface picture {\r\n    image : string;\r\n} \r\n\r\nconst useStyles = makeStyles((theme : Theme) => ({\r\n    root : {\r\n      width : 500,\r\n    },\r\n    button: {\r\n      '& > *': {\r\n        margin: theme.spacing(1),\r\n      },\r\n    },\r\n    input: {\r\n      display: 'none',\r\n    },\r\n    main : {\r\n        padding : '2em',\r\n        backgroundColor: '#757de8',\r\n        height: '60vh', \r\n        overflow: 'auto',\r\n    },\r\n    progressCircle : {\r\n      margin:'1em'\r\n    }\r\n}));\r\n\r\n//font theme\r\nconst theme = createMuiTheme();\r\ntheme.typography.h3 = {\r\n  fontSize: '1.2rem',\r\n  '@media (min-width:600px)': {\r\n    fontSize: '1.5rem',\r\n  },\r\n  [theme.breakpoints.up('md')]: {\r\n    fontSize: '2rem',\r\n  },\r\n};\r\n\r\nfunction Home(){\r\n    const classes = useStyles();\r\n\r\n    const [previewURL, setPreview] = useState<string>('');\r\n    const [isSetImage, setImage] = useState<boolean>(false);\r\n    const [result, setResult] = useState<string>('');\r\n    const [camState, setCam] = useState<boolean>(false);\r\n    const [fileValue, setFile] = useState<HTMLInputElement>();\r\n\r\n    const token = `${'njys'}:${'1q2w3e4r!'}`;\r\n    const encodedToken = Buffer.from(token).toString('base64');\r\n    const headers = { 'Authorization': 'Basic '+ encodedToken };\r\n    const api = axios.create({\r\n      baseURL: `https://boostcamp-nyjs.herokuapp.com/`,\r\n      headers: headers\r\n    })\r\n  \r\n    const [mutateCreate, {isLoading : isPicLoading}] = useMutation(\r\n        (data: picture) => api.post('masks/', data), { \r\n      onSuccess: (res) => {\r\n        setResult(res.data.result);\r\n      },\r\n      onError : () => {\r\n        setResult('전송 오류');\r\n      }\r\n    })\r\n    \r\n    useEffect(() => {\r\n      if(camState) {\r\n          setPreview('');\r\n          setImage(false);\r\n        }\r\n      else if(previewURL !== '') setImage(true);\r\n    }, [camState, previewURL, setPreview, setImage]);\r\n  \r\n    \r\n    const Submit = (e : React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\r\n        e.preventDefault();\r\n    \r\n        if(previewURL === '') { \r\n          setResult('파일이 없습니다.');\r\n          return;\r\n        } \r\n    \r\n        const json : string = JSON.stringify({\r\n          image : previewURL,\r\n        })\r\n        const obj : picture = JSON.parse(json);\r\n        mutateCreate(obj);\r\n    }\r\n    \r\n    const handleFileInput = async (e : React.FormEvent<HTMLInputElement>) => {\r\n      e.preventDefault();\r\n      const target = e.target as HTMLInputElement;\r\n      // 파일 읽기\r\n      setFile(target);\r\n      if(camState) setCam(false);\r\n\r\n      try {\r\n        if(target){\r\n          let file : File = target.files![0];\r\n          const image : string = await ImageResizer(file);\r\n          setResult('');\r\n          setPreview(image);\r\n          setImage(true);\r\n        }\r\n      } catch { \r\n        // 오류 메시지 등록 후 박스 내 이미지 제거\r\n        setResult('업로드 오류');\r\n        setPreview('');\r\n        setImage(false);\r\n      }\r\n    }\r\n\r\n    const Loading = () => { \r\n      return ( \r\n        <Box display=\"flex\" alignItems=\"center\" justifyContent=\"center\" className = {classes.progressCircle}>\r\n          <CircularProgress color=\"primary\" />\r\n        </Box>      \r\n      ) \r\n    }\r\n\r\n    const Result = () => {\r\n      return (\r\n        <ThemeProvider theme={theme}>\r\n          <br/>\r\n          <Box display=\"flex\" alignItems=\"center\" justifyContent=\"center\"><Typography variant=\"h3\" id=\"res\">{result}</Typography></Box>\r\n        </ThemeProvider>\r\n      )\r\n    }\r\n\r\n    // webcam\r\n    const camToggle : () => void = () => {\r\n      setResult('');\r\n      setCam(camState => !camState);\r\n      // 웹캠 켰을 때 기존 사진 정보 제거\r\n      if(fileValue !== undefined) {\r\n        fileValue.value = '';\r\n      }\r\n    }\r\n  \r\n    return (\r\n      <>\r\n      <Grid container spacing={0} direction=\"column\" alignItems=\"center\" justify=\"center\">\r\n          <Box mt=\"10rem\"/>\r\n        <Container maxWidth=\"sm\">\r\n          <Grid item>\r\n          <Paper elevation={4} className ={classes.main}>\r\n            {camState ? <WebcamCapture setPreview = {setPreview} camToggle ={camToggle}/> : null}\r\n            {isSetImage?  <Image src={previewURL}/> : null}\r\n            <Box mt=\"3rem\"/>\r\n            {isPicLoading ? <Loading/> : <Result/> }\r\n          </Paper>\r\n          </Grid>\r\n        </Container>\r\n        <Box mb=\"0.5rem\"/>\r\n        <Grid container spacing={5} direction=\"row\" alignItems=\"center\" justify=\"center\">\r\n          <Grid item>\r\n            <label htmlFor=\"image_uploads\">\r\n            <Tooltip title=\"image upload\" placement=\"left\" arrow>\r\n            <IconButton color=\"primary\" aria-label=\"upload\" component=\"span\">\r\n              <AttachmentIcon fontSize = 'large'/>\r\n            </IconButton>\r\n            </Tooltip>\r\n            <input \r\n              type = \"file\" \r\n              id =\"image_uploads\" \r\n              accept=\"image/*\" \r\n              onClick ={()=>{setResult(''); setPreview('');}}\r\n              onChange={handleFileInput} \r\n              className = {classes.input} />\r\n            </label>\r\n          </Grid>\r\n          <Grid item>\r\n            <label htmlFor=\"open_webcam\">\r\n            <Tooltip title=\"webcam on\" arrow>\r\n            <IconButton color=\"primary\" aria-label=\"open_webcam\" component=\"span\" onClick={camToggle} >\r\n              <PhotoCamera fontSize = 'large'/>\r\n            </IconButton>\r\n            </Tooltip>\r\n            </label>\r\n          </Grid>\r\n          <Grid item>\r\n            <Button variant=\"contained\" size=\"small\" color=\"primary\" onClick={Submit}>✨제출</Button>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n      <Box mb=\"0.5rem\"/>\r\n      </> \r\n    );\r\n  }\r\n\r\n  export default Home;","import Resizer from 'react-image-file-resizer';\r\n\r\nconst ImageResizer = (file : File) :Promise<string> => {\r\n    return (\r\n        new Promise(resolve => {\r\n            Resizer.imageFileResizer(\r\n              file, 448, 448, 'JPEG', 100, 0,\r\n              uri => {\r\n                resolve(uri.toString());\r\n              },\r\n              'base64',\r\n            );\r\n          })\r\n    );\r\n}\r\n\r\nexport default ImageResizer\r\n","import React, {useRef, useCallback} from 'react';\r\nimport Webcam from 'react-webcam';\r\nimport { Button, Grid, Box } from '@material-ui/core';\r\n\r\nconst videoConstraints = {\r\n    width: 448,\r\n    height: 448,\r\n    facingMode: \"user\"\r\n};\r\n\r\ninterface prop {\r\n  camToggle  : () => void,\r\n  setPreview : React.Dispatch<React.SetStateAction<string>>\r\n}\r\n\r\nconst WebcamCapture = (props : prop) => {\r\n    const webcamRef = useRef<any>(null);\r\n    const {camToggle, setPreview} = props;\r\n\r\n    const capture = useCallback(() => {\r\n        const imageSrc = webcamRef.current.getScreenshot();\r\n        setPreview(imageSrc) // base64 image file\r\n        camToggle();\r\n      }, [webcamRef, camToggle, setPreview]);\r\n\r\n    return (\r\n          <>\r\n            <Grid container justify=\"center\" alignItems=\"center\">\r\n              <Webcam\r\n                audio={false}\r\n                height={window.innerHeight> 800 ? 448 : 224}\r\n                ref={webcamRef}\r\n                screenshotFormat=\"image/jpeg\"\r\n                width={window.innerWidth > 800 ? 448 : 224}\r\n                videoConstraints={videoConstraints}\r\n              />\r\n            </Grid>\r\n            <Box mt = \"1rem\"/>\r\n            <Grid container spacing={5} direction=\"row\" alignItems=\"center\" justify=\"center\">\r\n              <Grid item>\r\n                <Button variant=\"contained\" size=\"small\" color=\"primary\" onClick={capture}>캡쳐</Button>\r\n              </Grid>\r\n              <Grid item>\r\n                <Button variant=\"contained\" size=\"small\" color=\"primary\" onClick={camToggle}>종료</Button>\r\n              </Grid>\r\n            </Grid>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default WebcamCapture\r\n","import { useEffect, useRef } from \"react\";\r\n\r\n// custom hook\r\nconst useInterval = (callback : any, delay : number) => {\r\n    const savedCallback = useRef<any>();\r\n\r\n    // Remember the latest callback.\r\n    useEffect(() => {\r\n      savedCallback.current = callback;\r\n    }, [callback]);\r\n  \r\n    // Set up the interval.\r\n    useEffect(() => {\r\n      function tick() {\r\n        savedCallback.current();\r\n      }\r\n      if (delay !== null) {\r\n        let id = setInterval(tick, delay);\r\n        return () => clearInterval(id);\r\n      }\r\n    }, [delay]);\r\n}\r\n\r\nexport default useInterval","\r\nimport { useRef, useState, useEffect, useCallback} from 'react';\r\nimport axios from 'axios';\r\nimport { useMutation } from 'react-query';\r\nimport Webcam from 'react-webcam';\r\n\r\nimport useInterval from './useInterval';\r\n\r\n// material-UI\r\nimport { Grid, Box } from '@material-ui/core/';\r\nimport { red, pink, purple, deepPurple, indigo, blue, \r\n          lightBlue, cyan, teal, green, lightGreen, lime,\r\n          yellow, amber, orange, deepOrange, } from '@material-ui/core/colors/';\r\n\r\n// d3\r\nimport { select } from \"d3\";\r\n\r\ninterface maskData {\r\n    check : boolean\r\n    bboxes : number[][],\r\n    labels : string[],\r\n    segmentations : string[],\r\n}\r\ninterface picture {\r\n  image : string;\r\n};\r\n\r\ninterface toggles{\r\n  interval : number | number[],\r\n  classification : boolean,\r\n  segmentation : boolean,\r\n  detection : boolean\r\n};\r\n\r\n// 16 bright colors\r\nconst colorMap : any = [ \r\n  red, pink, purple, deepPurple, indigo, blue, lightBlue, \r\n  cyan, teal, green, lightGreen, lime, yellow, amber, orange,\r\n  deepOrange];\r\n\r\nconst initData : maskData ={\r\n  'check' : true,\r\n  'bboxes' : [[0, 0, 0, 0]],\r\n  'labels' : [''],\r\n  'segmentations' : ['0,0']\r\n}\r\n\r\n// 10 colors\r\nconst initColors :string[] = [\r\n  red[400], purple[400], indigo[400], blue[400], cyan[400], \r\n  green[400], lime[400], yellow[400], amber[400], deepOrange[400]\r\n]\r\n\r\nconst videoConstraints = {\r\n    width: 448,\r\n    height: 448,\r\n    facingMode: \"user\"\r\n};\r\n\r\nconst WebcamDrawing = (props : toggles) => {\r\n\r\n    const svgRef = useRef(null);\r\n    const webcamRef = useRef<any>(null);\r\n    const [previewURL, setPreview] = useState<string>('');\r\n    const [colors, setColors] = useState<string[]>(initColors) // max colors : 10\r\n\r\n    const [receivedMaskData, setMaskData] = useState<maskData>(initData);\r\n    const [labelData, setLabelData] = useState<string[]>(initData.labels);\r\n    const [bboxData, setBboxData] = useState<number[][]>(initData.bboxes);\r\n    const [segmentation, setSegmentation] = useState<string[]>(initData.segmentations);\r\n\r\n    // boostcamp\r\n    // const api = axios.create({\r\n    //   baseURL: `http://49.50.165.199:6010/`,\r\n    // })\r\n\r\n    // AWS\r\n    const api = axios.create({\r\n      baseURL: `http://54.180.91.142/`,\r\n    })\r\n  \r\n    const [mutateCreate] = useMutation(\r\n        (data: picture) => api.post('masks', data), { \r\n      onSuccess: (res) => {\r\n        const result = JSON.parse(res.data)\r\n        if(result['check']){ // success\r\n          setMaskData(result);\r\n        } \r\n        else { colorChange(); } // success without results\r\n      },\r\n      onError : (e) => {\r\n        console.log(e);\r\n      }\r\n    })\r\n\r\n    // set new 10 colors! \r\n    const colorChange = useCallback(() => {\r\n      const newColors : string[] = [];\r\n      for (let i = 0; i < 10; i++){\r\n        newColors.push(colorMap[Math.floor(Math.random() * 14)][(Math.floor(Math.random() * 8) + 1)*100])\r\n      }\r\n      setColors(newColors)\r\n    },[setColors]);\r\n\r\n    const capture = useCallback(() => {\r\n      const image : string = webcamRef.current.getScreenshot();\r\n      setPreview(image) // base64 image file\r\n    }, [webcamRef, setPreview]);\r\n\r\n    const submit = () => {\r\n      const json : string = JSON.stringify({\r\n        data : previewURL,\r\n      })\r\n      const obj : picture = JSON.parse(json);\r\n      if(previewURL !== '') mutateCreate(obj);\r\n    }\r\n\r\n    // update Received Mask Data\r\n    useEffect(() => {\r\n      setLabelData(receivedMaskData.labels);\r\n      setBboxData(receivedMaskData.bboxes);\r\n      setSegmentation(receivedMaskData.segmentations);\r\n    }, [receivedMaskData, setLabelData, setBboxData, setSegmentation])\r\n\r\n    // drawing classification labels\r\n    useEffect(() => {\r\n      if(svgRef.current && props.classification){\r\n      const svg = select(svgRef.current);\r\n      \r\n      svg\r\n        .selectAll('text')\r\n        .data(bboxData)\r\n        .join(\r\n          (enter) => enter.append('text'),\r\n          (update) => update.attr(\"class\", \"updated\"),\r\n          (exit) => exit.remove()\r\n        )\r\n        .attr('x', (data) => (data[0] - 15))\r\n        .attr('y', (data) => (data[1] - 5))\r\n        .data(labelData!)\r\n        .text(data => data)\r\n        .attr('font-family', 'Arial')\r\n        .attr('font-size', \"11px\")\r\n        .attr('text-align', 'center')\r\n        .attr('fill', 'red')\r\n        .attr('stroke-width', 1)\r\n    } else select(\"text\").remove();\r\n    }, [bboxData, labelData, props.classification]);\r\n\r\n    // drawing bounding box\r\n    useEffect(() => {\r\n      if(svgRef.current && props.detection){\r\n      const svg = select(svgRef.current);\r\n      \r\n      svg\r\n        .selectAll(\"rect\")\r\n        .data(bboxData)\r\n        .join(\r\n          (enter) => enter.append(\"rect\"),\r\n          (update) => update.attr(\"class\", \"updated\"),\r\n          (exit) => exit.remove()\r\n        )\r\n        .attr('width', (data : number[]) => data[2] - data[0])\r\n        .attr('height', (data : number[]) => data[3] - data[1])\r\n        .attr('x', (data : number[]) => data[0])\r\n        .attr('y', (data : number[]) => data[1])\r\n        .attr('fill', 'transparent')\r\n        .attr('stroke', 'red')\r\n        .attr('stroke-width', 2)\r\n      } else select(\"rect\").remove();\r\n    }, [bboxData, props.detection]);\r\n    \r\n    // drawing segmentation mask\r\n    useEffect(() => {\r\n      if(svgRef.current && props.segmentation){\r\n\r\n      const svg = select(svgRef.current);\r\n      const colorNumbers = [0,1,2,3,4,5,6,7,8,9];\r\n\r\n      svg\r\n        .selectAll(\"polygon\")\r\n        .data(segmentation)\r\n        .join(\r\n          (enter) => enter.append(\"polygon\"),\r\n          (update) => update.attr(\"class\", \"updated\"),\r\n          (exit) => exit.remove()\r\n        )\r\n        .attr('points', (data : string) => data)\r\n        .data(colorNumbers)\r\n        .attr('fill', (data : number) => colors[data])\r\n        .attr('stroke-width', 2)\r\n        .attr('opacity', 0.5)\r\n      } else select('polygon').remove();\r\n    }, [segmentation, colors, props.segmentation]);\r\n\r\n    // set fps\r\n    useInterval (() =>{\r\n      if(webcamRef.current) {\r\n        try{\r\n          capture();\r\n          submit();\r\n        }\r\n        catch (e) {\r\n          console.log(e);\r\n        }\r\n      }\r\n    }, (1000 / (isNaN(Number(props.interval))? 1 : Number(props.interval))));\r\n\r\n    // useEffect clean-up\r\n    useEffect(() => {\r\n      return () => setPreview('');\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n          <Grid container justify=\"center\" alignItems=\"center\">\r\n          <Webcam\r\n              audio={false}\r\n              height={window.innerHeight > 640 ? 448 : 224}\r\n              ref={webcamRef}\r\n              screenshotFormat=\"image/jpeg\"\r\n              width={window.innerWidth > 640 ? 448 : 224}\r\n              videoConstraints={videoConstraints}\r\n          />\r\n          <svg ref={svgRef}\r\n            style ={{\r\n              position: \"absolute\",\r\n              marginLeft: \"auto\",\r\n              marginRight: \"auto\",\r\n              textAlign: \"center\",\r\n              zIndex: 9,\r\n              width: window.innerWidth > 640 ? 448 : 224,\r\n              height: window.innerHeight > 640 ? 448 : 224, \r\n            }}\r\n          />\r\n          </Grid>\r\n          <Box mt = \"1rem\"/>\r\n      </>\r\n  );\r\n}\r\n\r\nexport default WebcamDrawing","import { useState } from 'react';\r\n\r\n// components\r\nimport WebcamDrawing from './components/WebcamDrawing';\r\n\r\n// material-UI\r\nimport Box from '@material-ui/core/Box';\r\nimport Button from '@material-ui/core/Button';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Container from '@material-ui/core/Container';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { withStyles, makeStyles} from '@material-ui/core/styles';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport VideocamIcon from '@material-ui/icons/Videocam';\r\nimport VideocamOffIcon from '@material-ui/icons/VideocamOff';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst PrettoSlider = withStyles({\r\n  root: {\r\n    color: '#52af77',\r\n    height: 8,\r\n  },\r\n  thumb: {\r\n    height: 24,\r\n    width: 24,\r\n    backgroundColor: '#fff',\r\n    border: '2px solid currentColor',\r\n    marginTop: -8,\r\n    marginLeft: -12,\r\n    '&:focus, &:hover, &$active': {\r\n      boxShadow: 'inherit',\r\n    },\r\n  },\r\n  active: {},\r\n  valueLabel: {\r\n    left: 'calc(-50% + 4px)',\r\n  },\r\n  track: {\r\n    height: 8,\r\n    borderRadius: 4,\r\n  },\r\n  rail: {\r\n    height: 8,\r\n    borderRadius: 4,\r\n  },\r\n})(Slider);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root : {\r\n    width : 500,\r\n  },\r\n  button: {\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  input: {\r\n    display: 'none',\r\n  },\r\n  main : {\r\n      padding : '2em',\r\n      backgroundColor: '#757de8',\r\n      dark: '#002984',\r\n      height: '60vh', \r\n      overflow: 'auto',\r\n  },\r\n  progressCircle : {\r\n    margin:'1em'\r\n  }\r\n}));\r\n\r\nfunction RealTime(){\r\n    const classes = useStyles();\r\n\r\n    const [camState, setCam] = useState<boolean>(false);\r\n    const [classState, setClass] = useState<boolean>(false);\r\n    const [segState, setSeg] = useState<boolean>(false);\r\n    const [detState, setDet] = useState<boolean>(false);\r\n    const [interval, setInterval] = useState<number | number[]>(7);\r\n    \r\n    // webcam\r\n    const camToggle = () => {\r\n      setCam(camState => !camState);\r\n    }\r\n\r\n    // toggle buttons\r\n    const classToggle = () => {\r\n      setClass(classState => !classState);\r\n    }\r\n\r\n    const segToggle = () => {\r\n      setSeg(segState => !segState);\r\n    }\r\n\r\n    const detToggle = () => {\r\n      setDet(detState => !detState);\r\n    }\r\n\r\n    return (\r\n      <>\r\n      <Grid container spacing={0} direction=\"column\" alignItems=\"center\" justify=\"center\">\r\n        <Box mt=\"10rem\"/>\r\n        <Container maxWidth=\"sm\">\r\n          <Grid item>\r\n          <Paper elevation={4} className ={classes.main}>\r\n            {camState ? \r\n              <WebcamDrawing \r\n                interval = {interval}\r\n                classification = {classState} \r\n                segmentation = {segState}\r\n                detection = {detState} /> \r\n              : null\r\n            }\r\n            <Box mt=\"3rem\"/>\r\n          </Paper>\r\n          </Grid>\r\n        </Container>\r\n        <Box mb=\"0.5rem\"/>\r\n        <Grid container spacing={3} direction=\"row\" alignItems=\"center\" justify=\"center\">\r\n          <Grid item>\r\n            <Tooltip title=\"classification\" arrow>\r\n              {classState? <Button variant=\"contained\" size=\"small\" color=\"secondary\" onClick = {classToggle}>class🧡</Button>\r\n                : <Button variant=\"contained\" size=\"small\" color=\"primary\" onClick = {classToggle}>class🧡</Button>\r\n              }\r\n            </Tooltip>\r\n          </Grid>\r\n          <Grid item>\r\n            <Tooltip title=\"segmentation\" arrow>\r\n              {segState? <Button variant=\"contained\" size=\"small\" color=\"secondary\" onClick = {segToggle}>seg💛</Button>\r\n                : <Button variant=\"contained\" size=\"small\" color=\"primary\" onClick = {segToggle}>seg💛</Button>\r\n              }\r\n            </Tooltip>\r\n          </Grid>\r\n          <Grid item>\r\n          <Tooltip title=\"detection\" arrow>\r\n              {detState ? <Button variant=\"contained\" size=\"small\" color=\"secondary\" onClick = {detToggle}>det💙</Button>\r\n                : <Button variant=\"contained\" size=\"small\" color=\"primary\" onClick = {detToggle}>det💙</Button>\r\n              }\r\n            </Tooltip>\r\n          </Grid>\r\n          <Grid item>\r\n            <label htmlFor=\"open_webcam\">\r\n            <Tooltip title=\"webcam on/off\" arrow>\r\n            <IconButton color=\"primary\" aria-label=\"open_webcam\" component=\"span\" onClick={camToggle}>\r\n                {camState ? <VideocamOffIcon fontSize = 'large'/> : <VideocamIcon fontSize = 'large'/>}\r\n            </IconButton>\r\n            </Tooltip>\r\n            </label>\r\n          </Grid>\r\n          <Grid item>\r\n            <Typography gutterBottom>　　fps 설정　　</Typography>\r\n            <PrettoSlider valueLabelDisplay=\"auto\" aria-label=\"pretto slider\" \r\n              defaultValue={7} min = {1} max = {15} step = {1} \r\n              onChange = {(e, value : number | number[]) => {setInterval(value)}}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n      <Box mb=\"0.5rem\"/>\r\n    </> \r\n    );\r\n}\r\n\r\nexport default RealTime;","// material-UI\r\nimport { withStyles, Theme, createStyles, makeStyles } from '@material-ui/core/styles/';\r\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper  } from '@material-ui/core/';\r\n\r\nconst StyledTableCell = withStyles((theme: Theme) =>\r\n  createStyles({\r\n    head: {\r\n      backgroundColor: theme.palette.common.black,\r\n      color: theme.palette.common.white,\r\n    },\r\n    body: {\r\n      fontSize: 14,\r\n    },\r\n  }),\r\n)(TableCell);\r\n\r\nconst StyledTableRow = withStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      '&:nth-of-type(odd)': {\r\n        backgroundColor: theme.palette.action.hover,\r\n      },\r\n    },\r\n  }),\r\n)(TableRow);\r\n\r\nfunction createData(name: string, part: string, mail: string, github: string) {\r\n  return { name, part, mail, github};\r\n}\r\n\r\nconst rows = [\r\n  createData('김규빈', \"model,data\",\"kimkyu1515@naver.com\",\"https://github.com/kkbwilldo\"),\r\n  createData('권태확', \"model,data\",\"taehwak@hanyang.ac.kr\",\"https://github.com/taehwakkwon\"),\r\n  createData('김상훈', \"front\",\"ropeiny@gmail.com\",\"https://github.com/simon-hoon\"),\r\n  createData('박경환', \"back\",\"john1725258@gmail.com\",\"https://github.com/hwan1753\"),\r\n  createData('전주영', \"front\",\"zhonya_j@g.seoultech.ac.kr\",\"https://github.com/zhonya-j\"),\r\n];\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 700,\r\n  },\r\n});\r\n\r\nexport default function CustomizedTables() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table className={classes.table} aria-label=\"customized table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <StyledTableCell>name</StyledTableCell>\r\n            <StyledTableCell align=\"center\">part&nbsp;</StyledTableCell>\r\n            <StyledTableCell align=\"center\">mail&nbsp;</StyledTableCell>\r\n            <StyledTableCell align=\"center\">github&nbsp;</StyledTableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {rows.map((row) => (\r\n            <StyledTableRow key={row.name}>\r\n              <StyledTableCell component=\"th\" scope=\"row\">\r\n                {row.name}\r\n              </StyledTableCell>\r\n              <StyledTableCell align=\"center\">{row.part}</StyledTableCell>\r\n              <StyledTableCell align=\"center\">{row.mail}</StyledTableCell>\r\n              <StyledTableCell align=\"center\">{row.github}</StyledTableCell>\r\n            </StyledTableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}","import {useState} from 'react';\r\nimport ContactusTable from './ContactusTable';\r\n\r\n// material-UI\r\nimport { makeStyles, Theme } from '@material-ui/core/styles/';\r\nimport { AppBar, Box, Toolbar, IconButton, Typography, Modal, Backdrop, Fade, Tooltip } from '@material-ui/core/';\r\n\r\nimport Brightness3Icon from \"@material-ui/icons/Brightness3\";\r\nimport Brightness7Icon from \"@material-ui/icons/Brightness7\";\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport GitHubIcon from '@material-ui/icons/GitHub';\r\n\r\nconst useStyles = makeStyles((theme : Theme) => ({\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    display: 'block'\r\n  },\r\n  inputRoot: {\r\n    color: 'inherit',\r\n  },\r\n  inputInput: {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    // vertical padding + font size from searchIcon\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n    transition: theme.transitions.create('width'),\r\n    width: '100%',\r\n    [theme.breakpoints.up('md')]: {\r\n      width: '20ch',\r\n    },\r\n  },\r\n  sectionDesktop: {\r\n    display: 'flex',\r\n  },\r\n  modal: {\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n    },\r\n  paper: {\r\n      backgroundColor: theme.palette.background.paper,\r\n      border: '2px solid #000',\r\n      boxShadow: theme.shadows[5],\r\n      padding: theme.spacing(2, 4, 3),\r\n  },\r\n}));\r\n\r\nexport default function PrimarySearchAppBar(props : {theme : boolean, setTheme : React.Dispatch<React.SetStateAction<boolean>> }) {\r\n  const classes = useStyles();\r\n  \r\n  //dark mode \r\n  const {theme, setTheme} = props;\r\n  const icon = !theme ? <Brightness7Icon /> : <Brightness3Icon />\r\n  \r\n  //modal\r\n  const [open, setOpen] = useState<boolean>(false);\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const contactModal = (\r\n      <Modal\r\n      aria-labelledby=\"transition-modal-title\"\r\n      aria-describedby=\"transition-modal-description\"\r\n      className={classes.modal}\r\n      open={open}\r\n      onClose={handleClose}\r\n      closeAfterTransition\r\n      BackdropComponent={Backdrop}\r\n      BackdropProps={{\r\n        timeout: 500,\r\n      }}\r\n    >\r\n      <Fade in={open} >\r\n        <div className={classes.paper}>\r\n          <h1 id=\"transition-modal-title\">Contact us</h1>\r\n          <ContactusTable/>\r\n        </div>\r\n      </Fade>\r\n    </Modal>\r\n  );\r\n\r\n  // github repository\r\n  const repoLink : string = \"https://github.com/NJYS/Mask-CV-App\"\r\n\r\n  return (\r\n    <div className={classes.grow}>\r\n      <AppBar position=\"fixed\">\r\n        <Toolbar>\r\n          <Typography className={classes.title} variant=\"h6\" noWrap>\r\n            TEAM NJYS - Mask CV App\r\n          </Typography>\r\n          <div className={classes.grow}/>\r\n          <div className={classes.sectionDesktop}>\r\n            <Tooltip title=\"day/night mode\">\r\n              <IconButton\r\n                edge=\"end\"\r\n                color=\"inherit\"\r\n                aria-label=\"mode\"\r\n                onClick={() => setTheme(!theme)}\r\n              >\r\n                {icon}\r\n              </IconButton>\r\n            </Tooltip>\r\n            <Box mr = \"0.5rem\"/>\r\n\r\n            <Tooltip title=\"contact\">\r\n              <IconButton aria-label=\"contact\" color=\"inherit\" onClick={handleOpen}>\r\n                <MailIcon />\r\n              </IconButton>\r\n            </Tooltip>\r\n            {contactModal}\r\n\r\n            <Tooltip title=\"github repo\">\r\n            <IconButton \r\n              aria-label=\"link to github\"\r\n              color=\"inherit\" \r\n              onClick= {() => window.open(repoLink)}>\r\n              <GitHubIcon />\r\n            </IconButton>\r\n            </Tooltip>\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useMemo } from 'react';\r\nimport { BrowserRouter, Route, Link } from 'react-router-dom';\r\n\r\n// pages\r\nimport Home from './Home';\r\nimport Realtime from './Realtime';\r\n\r\n// components\r\nimport Appbar from './styles/Appbar';\r\n\r\n// material UI\r\nimport { makeStyles, createMuiTheme, Theme, ThemeProvider } from '@material-ui/core/styles/';\r\nimport { Grid, CssBaseline, BottomNavigation, BottomNavigationAction, useMediaQuery } from '@material-ui/core/';\r\nimport ImageSearchIcon from '@material-ui/icons/ImageSearch';\r\nimport CenterFocusStrongIcon from '@material-ui/icons/CenterFocusStrong';\r\n\r\nconst useStyles = makeStyles((theme : Theme) => ({\r\n  root : {\r\n    width : 500,\r\n  },\r\n}));\r\n\r\nfunction App() {\r\n\r\n  const classes = useStyles();\r\n  const prefersDarkMode : boolean = useMediaQuery('(prefers-color-scheme: dark)');\r\n  const [theme, setTheme] = useState<boolean>(prefersDarkMode) // 다크모드\r\n  const [value, setValue] = useState<number>(0);\r\n\r\n  const appliedTheme = useMemo(\r\n    () =>\r\n      createMuiTheme({\r\n        palette: {\r\n          type: theme ? 'dark' : 'light',\r\n        },\r\n      }),\r\n    [theme],\r\n  );\r\n\r\n  return (\r\n    <>\r\n    <BrowserRouter>\r\n      <ThemeProvider theme={appliedTheme}>\r\n        <CssBaseline/>\r\n        <Appbar theme = {theme} setTheme = {setTheme}/>\r\n        <Grid container spacing={0} direction=\"column\" alignItems=\"center\" justify=\"center\">\r\n          <Route exact path = \"/\" component = {Home}/>\r\n          <Route path = \"/realtime\" component = {Realtime}/>\r\n            <BottomNavigation value={value} \r\n              onChange={(e : React.ChangeEvent<{}>, newValue : number) => {setValue(newValue);}} \r\n              showLabels className={classes.root}>\r\n              <BottomNavigationAction component = {Link} to =\"/\" label=\"Classify\" icon={<ImageSearchIcon />} />\r\n              <BottomNavigationAction component = {Link} to =\"/realtime\" label=\"Seg-Det\" icon={<CenterFocusStrongIcon />} />\r\n            </BottomNavigation>\r\n        </Grid> \r\n      </ThemeProvider>\r\n    </BrowserRouter>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}